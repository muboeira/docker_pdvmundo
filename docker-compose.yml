version: "3.7"
services:
  app:
    build:
      args:
        user: mbb
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: pdvmundo-image
    container_name: pdvmundo-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ${APPLICATION}:/var/www
      - ${JOBAPPLICATION}:/var/www/job_app
      - ./php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: pdvmundo-nginx
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ${APPLICATION}:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  postgres:
    image: kartoza/postgis:12.0
    container_name: pdvmundo-postgres
    restart: unless-stopped
    ports:
      - "5434:5432"
      # volumes:
      #   - ./postgresql/docker-entrypoint-initdb.d/init.sql:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB},${POSTGRES_DB_SECOND}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting,unaccent
    networks:
      - app-network

  redis:
    image: redis:6
    container_name: pdvmundo-redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./redis/data:/data
    ports:
      - "6380:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
